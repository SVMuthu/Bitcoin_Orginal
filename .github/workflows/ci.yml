# Copyright (c) 2023 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

name: CI
on:
  # Trigger on pull requests and pushes to any branch.
  pull_request:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.event_name != 'pull_request' && github.run_id || github.ref }}
  cancel-in-progress: true

env:
  CI_FAILFAST_TEST_LEAVE_DANGLING: 1  # Prevent GHA from killing the CI script itself on error
  MAKEJOBS: '-j7'

jobs:
  test-each-commit:
    name: 'Bitcoin_core'
    runs-on: self-hosted  # Use self-hosted runner with label 'Linux'
    timeout-minutes: 360  # Set maximum job time to 6 hours
    env:
      MAX_COUNT: 6  # Limit the number of commits to test
    steps:
      - name: Determine fetch depth
        run: echo "FETCH_DEPTH=$((${{ github.event.pull_request.commits }} + 2))" >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Determine commit range
        run: |
          # Checkout HEAD~ and find the test base commit
          git checkout HEAD~
          
          # Determine the base commit for testing
          MERGE_BASE=$(git rev-list -n1 --merges HEAD)
          EXCLUDE_MERGE_BASE_ANCESTORS=""
          
          if [ -n "$MERGE_BASE" ]; then
            EXCLUDE_MERGE_BASE_ANCESTORS="^${MERGE_BASE}^@"
          fi
          
          echo "TEST_BASE=$(git rev-list -n$((${{ env.MAX_COUNT }} + 1)) --reverse HEAD $EXCLUDE_MERGE_BASE_ANCESTORS | head -1)" >> "$GITHUB_ENV"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install clang ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq libevent-dev libboost-dev libsqlite3-dev libdb++-dev systemtap-sdt-dev libminiupnpc-dev libnatpmp-dev qtbase5-dev qttools5-dev qttools5-dev-tools qtwayland5 libqrencode-dev -y

      - name: Compile and run tests
        run: |
          # Rebase and run tests on commits after the last merge commit and before the PR head commit
          git rebase --exec "echo Running test-one-commit on \$(git log -1) && ./autogen.sh && CC=clang CXX=clang++ ./configure --with-incompatible-bdb && make clean && make -j $(nproc) && make check -j $(nproc)>/home/svm/Downloads/Bitcoin_Orginal/Output_log/unit_test.log 2>&1" ${{ env.TEST_BASE }}

      - name: Unit Testhttps://meet.google.com/rut-oifv-rpe
        run: |
          cd /home/svm/Downloads/Bitcoin_Orginal/Output_log
          python3 unit_test_creator.py
          python3 unit_test_run.py

      # Uncomment and adjust if functional tests are needed
      # - name: Functional test
      #   run: |
      #     sudo chmod -R 777 ./test
      #     sudo ./test/functional/test_runner.py -j $(nproc)

