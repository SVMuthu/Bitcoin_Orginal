# name: CI
# on:
#   pull_request:
#   push:
#     branches:
#       - '**'
#     tags-ignore:
#       - '**'
#   workflow_dispatch:

# jobs:
#   test-each-commit:
#     name: 'test each commit'
#     runs-on: Linux
#     steps:
#       - uses: actions/checkout@v4
#       - name: Install Dependencies
#         run: |
#           sudo apt-get update
#           sudo apt-get install clang ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq libevent-dev libboost-dev libsqlite3-dev libdb++-dev systemtap-sdt-dev libminiupnpc-dev libnatpmp-dev qtbase5-dev qttools5-dev qttools5-dev-tools qtwayland5 libqrencode-dev -y
#           sudo apt-get update
#           sudo apt-get install autoconf
#           sudo apt-get install pkg-config
#           sudo apt-get install libboost-all-dev
#           sudo apt-get install libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev
#           sudo apt-get install libdb-dev libdb++-dev
#           sudo apt-get install libzmq3-dev
#           sudo apt-get install libssl-dev libminiupnpc-dev
          
#       - name: Build
#         run: |
#           ./autogen.sh 
#           CC=clang CXX=clang++ 
#           ./configure
#           ./configure --with-incompatible-bdb
#           make -j $(nproc)
          
#       - name: unit test
#         run: |
#           make -C src check-unit -j $(nproc) > /home/svm/Downloads/Bitcoin_Core_Qase/unit_test.log 2>&1 
#           python3 /home/svm/Downloads/Bitcoin_Core_Qase/unit_test_creator.py 
#           python3 /home/svm/Downloads/Bitcoin_Core_Qase/unit_test_run.py 
      
#       - name: Functional test
#         run: |
#           sudo chmod -R 777 ./test
#           sudo ./test/functional/test_runner.py -j $(nproc) > /home/svm/Downloads/Bitcoin_Core_Qase/functional_test.log 2>&1
#           python3 /home/svm/Downloads/Bitcoin_Core_Qase/functional_test_creator.py 
#           python3 /home/svm/Downloads/Bitcoin_Core_Qase/functional_test_run.py 

 
name: CI
on:
  pull_request:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.event_name != 'pull_request' && github.run_id || github.ref }}
  cancel-in-progress: true

env:
  CI_FAILFAST_TEST_LEAVE_DANGLING: 1
  MAKEJOBS: '-j10'

jobs:
  test-each-commit:
    name: 'test each commit'
    runs-on: ubuntu-24.04
    #if: github.event_name == 'pull_request' && github.event.pull_request.commits != 1
    timeout-minutes: 360
    env:
      MAX_COUNT: 6
    steps:
      - name: Determine fetch depth
        run: echo "FETCH_DEPTH=$((${{ github.event.pull_request.commits }} + 2))" >> "$GITHUB_ENV"
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Determine commit range
        run: |
          git checkout HEAD~
          MERGE_BASE=$(git rev-list -n1 --merges HEAD)
          EXCLUDE_MERGE_BASE_ANCESTORS=
          if test -n "$MERGE_BASE"; then
            EXCLUDE_MERGE_BASE_ANCESTORS=^${MERGE_BASE}^@
          fi
          echo "TEST_BASE=$(git rev-list -n$((${{ env.MAX_COUNT }} + 1)) --reverse HEAD $EXCLUDE_MERGE_BASE_ANCESTORS | head -1)" >> "$GITHUB_ENV"
      - run: |
          sudo apt-get update
          sudo apt-get install clang ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq libevent-dev libboost-dev libsqlite3-dev libdb++-dev systemtap-sdt-dev libminiupnpc-dev libnatpmp-dev qtbase5-dev qttools5-dev qttools5-dev-tools qtwayland5 libqrencode-dev -y
      - name: Compile and run tests
        run: |
          git rebase --exec "echo Running test-one-commit on \$( git log -1 ) && ./autogen.sh && CC=clang CXX=clang++ ./configure --with-incompatible-bdb && make clean && make -j $(nproc) check && ./test/functional/test_runner.py -j $(( $(nproc) * 2 ))" ${{ env.TEST_BASE }}
      - name: unit test
        run: |
          make check -j$(nproc) > /home/svm/Downloads/Bitcoin_Orginal/Output_log/unit_test.log 2>&1
          python3 /home/svm/Downloads/Bitcoin_Orginal/Output_log/unit_test_creator.py
          python3 /home/svm/Downloads/Bitcoin_Orginal/Output_log/unit_test_run.py
      - name: Functional test
        run: |
          sudo chmod -R 777 ./test
          sudo ./test/functional/test_runner.py -j $(nproc) > /home/svm/Downloads/Bitcoin_Orginal/Output_log/functional_test.log 2>&1
          python3 /home/svm/Downloads/Bitcoin_Orginal/Output_log/functional_test_creator.py
          python3 /home/svm/Downloads/Bitcoin_Orginal/Output_log/functional_test_run.py

